version: '3'
services:

  #Nginx
  webserver:
    image: nginx:alpine
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: webserver
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./gateway:/var/www/gateway
      - ./products:/var/www/products
      - ./crm:/var/www/crm
      - ./admin:/var/www/admin
      - ./spa:/var/www/spa
      - ./docker/websocket:/var/www/websocket
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/auth.htpasswd:/etc/nginx/conf.d/auth.htpasswd
      - ./docker/nginx/sites/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/ssl/
    networks:
      - app_network

  #Microservice Gateway
  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    container_name: gateway
    tty: true
    environment:
      SERVICE_NAME: gateway
      SERVICE_TAGS: dev
    working_dir: /var/www/gateway
    volumes:
      - ./gateway/:/var/www/gateway
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app_network

  #Microservice Products
  products:
    build:
      context: products
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    container_name: products
    tty: true
    environment:
      SERVICE_NAME: products
      SERVICE_TAGS: dev
    working_dir: /var/www/products
    volumes:
      - ./products/:/var/www/products
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app_network

  #Microservice CRM
  crm:
    build:
      context: crm
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    container_name: crm
    tty: true
    environment:
      SERVICE_NAME: crm
      SERVICE_TAGS: dev
    working_dir: /var/www/crm
    volumes:
      - ./crm/:/var/www/crm
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app_network

  #Spa Front
  spa:
    build:
      context: spa
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: spa
    tty: true
    working_dir: /var/www/spa
    volumes:
      - ./spa/:/var/www/spa
      - /var/www/spa/node_modules
    networks:
      - app_network

  #Admin
  admin:
    build:
      context: admin
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    container_name: admin
    tty: true
    environment:
      SERVICE_NAME: admin
      SERVICE_TAGS: dev
    working_dir: /var/www/admin
    volumes:
      - ./admin/:/var/www/admin
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app_network

  #Mysql Service
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    volumes:
      - db_data:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    networks:
      - app_network

  #phpMyAdmin by database
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0.1
    restart: always
    container_name: phpmyadmin
    environment:
      #change ip database by host
      PMA_HOST: db
      #PMA_HOST: 195.69.185.174:3306
      UPLOAD_LIMIT: 300M
    ports:
      - "8080:80"
    networks:
      - app_network

  #Redis container
  redis:
    image: redis:alpine
    restart: always
    container_name: redis
    command:
      - redis-server
      - --appendonly yes
      - --requirepass secret@243242
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
    environment:
      REDISCLI_AUTH: secret@243242
      REDIS_REPLICATION_MODE: master
    networks:
      - app_network

  #Socket container
  websocket:
    build:
      context: docker/websocket
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name:  websocket
    depends_on:
      - redis
    working_dir: /var/www/websocket
    volumes:
      - ./docker/websocket:/var/www/websocket
      - ./docker/websocket/laravel-echo-server.json:/var/www/websocket/laravel-echo-server.json
    ports:
      - 6001:6001
    networks:
      - app_network

#Docker Networks
networks:
  app_network:
    driver: bridge

#Volumes
volumes:
  db_data:
    driver: local